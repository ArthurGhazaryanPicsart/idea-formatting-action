name: Android CI

on:
  pull_request:

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  detekt:
    needs: [ cleanup-runs ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Cache Gradle Caches
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: cache-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper/
          key: cache-gradle-wrapper
      - name: Get all changed files
        id: changed_files
        uses: dorny/paths-filter@v2
        with:
        # Changed file can be 'added', 'modified', or 'deleted'.
        # By default, the type of change is not considered.
        # Optionally, it's possible to specify it using nested
        # dictionary, where the type of change composes the key.
        # Multiple change types can be specified using `|` as the delimiter.
         filters: |
          kotlin:
            - added|modified: '*.kt'
      - name: "Detekt check"
        id: detekt-check
        run: |
          echo ${{ steps.changed_files.outputs.kotlin_files }}
          # "$(git --no-pager diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} |  awk '$1 != "D" && $NF ~ /\.kts?$/ { print $NF }')"
          if [ -z "$CHANGED_FILES" ]; then
                 echo "No Kotlin staged files."
                 exit 0
             fi;
          #echo "$CHANGED_FILES"
          #./gradlew detektChangedFiles -PinputFiles="$CHANGED_FILES" -PignoreFailures=true
          #echo "::set-output name=detekt_report_file::$([ -f build/reports/detekt.xml ] && echo true || echo false)"
      - name: "Install reviewdog"
        if: steps.detekt-check.outputs.detekt_report_file == 'true'
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: "Report detekt issues"
        if: steps.detekt-check.outputs.detekt_report_file == 'true'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -f=checkstyle -name="detekt" -reporter="github-pr-review" -level="error" -fail-on-error <build/reports/detekt.xml
